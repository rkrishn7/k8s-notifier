name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release-charts:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate Release Vars
        id: vars
        run: echo "release_tag=$(grep -E '^version\s*=' Cargo.toml | sed -r 's/^version[ \t]*=[ \t]*//' | tr -d '"')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-notifier:${{ steps.vars.outputs.tag }}

      # Setup Helm
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.6.3' # You can specify the Helm version

      # Configure git user (needed by Helm Chart Releaser)
      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Setup Chart Releaser
      - name: Install Helm Chart Releaser
        run: |
          VERSION=$(curl --silent "https://api.github.com/repos/helm/chart-releaser/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          curl -fsSL -o cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/$VERSION/chart-releaser_${VERSION#v}_linux_amd64.tar.gz"
          tar -xzf cr.tar.gz
          sudo mv cr /usr/local/bin

      # Create GitHub Release and upload Helm charts
      - name: Release Charts
        run: |
          cr package charts/* # Package your charts that are in 'charts' directory
          cr upload -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -t ${{ secrets.GITHUB_TOKEN }} # Upload the charts
          cr index -i ./index.yaml -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} --push -t ${{ secrets.GITHUB_TOKEN }}
